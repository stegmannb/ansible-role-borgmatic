---
- name: Check if running on an compatible platform.
  assert:
    that: >-
      ansible_distribution == 'Archlinux'
      or ansible_distribution == 'Debian'
      or ansible_distribution == 'Ubuntu'
      or ansible_distribution == 'Fedora'
      or ansible_os_family == 'Debian'
    fail_msg: "This platform is not supported by this role: {{ ansible_distribution }}"
    quiet: true

- name: Check encryption settings.
  assert:
    that: >-
      borg_encryption_passphrase|length > 0
      or borg_unencrypted
    fail_msg: "You must set the borg_encryption_passphrase variable or set borg_unencrypted to true."
    quiet: true

- name: Check if the system uses systemd.
  assert:
    that: ansible_service_mgr == 'systemd'
    fail_msg: "This role expects systemd."
    quiet: true

- name: Execute distribution dependent setup.
  include_tasks: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution|lower }}-{{ ansible_distribution_major_version|lower }}.yml"
    - "{{ ansible_distribution|lower }}.yml"
    - "{{ ansible_os_family|lower }}.yml"

- name: Configure SSH.
  include_tasks: "ssh.yml"

- name: Configure BorgBase.
  include_tasks: "borgbase.yml"
  when: borgbase

- name: Configure borgmatic.
  include_tasks: "borgmatic.yml"

- name: Initialize the Borg repository.
  command: "{{ borgmatic_exec_result.stat.path }} init --encryption=repokey-blake2"
  when: borgmatic_init
  register: borgmatic_init_result
  # If the stout is empty then the repository already existed and the command did nothing.
  changed_when: borgmatic_init_result.stdout_lines|length > 0
  tags: molecule-notest

- name: Configure systemd.
  include_tasks: "systemd.yml"
